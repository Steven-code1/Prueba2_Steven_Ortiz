version: '3'
services:
  postgres-sql:
    image: postgres:alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: books
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 10s
      retries: 10
  traefik:
    image: traefik:v2.9
    command: --api.insecure=true --providers.docker
    ports:
      - 80:80
      - 8081:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  app-authors:
    image: stevenstryker/app-authors:1.0
    environment:
      QUARKUS_DATASOURCE_USERNAME: postgres
      QUARKUS_DATASOURCE_JDBC_PASSWORD: postgres
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://postgres-sql/books
    depends_on:
      postgres-sql:
        condition: service_healthy
      traefik:
        condition: service_started
        
    deploy:
      replicas: 2
    ports:
      - 7002
    labels:
      - "traefik.http.routers.app-authors.rule=PathPrefix(`/app-authors`)"
      - "traefik.http.middlewares.app-authors-stripprefix.stripprefix.prefixes=/app-authors"
      - "traefik.http.routers.app-authors.middlewares=app-authors-stripprefix"
  app-books:
    image: stevenstryker/app-books:1.0
    ports:
      - 7001
    deploy:
      replicas: 3
    environment:
      DB_URL: jdbc:postgresql://postgres-sql/books
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
    depends_on:
      traefik:
        condition: service_started
      postgres-sql:
        condition: service_started
    labels:
      - "traefik.http.routers.app-books.rule=PathPrefix(`/app-books`)"
      - "traefik.http.middlewares.app-books-stripprefix.stripprefix.prefixes=/app-books"
      - "traefik.http.routers.app-books.middlewares=app-books-stripprefix"
  app-web:
    image: stevenstryker/app-web:1.0
    ports:
      - 8080:8080
    depends_on:
      - traefik

